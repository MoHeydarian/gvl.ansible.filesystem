- name: GVL Galaxy - Stop Galaxy
  shell: "{{ galaxy_server_dir }}/run.sh --stop-daemon"
  become: yes
  become_user: "{{ galaxy_user_name }}"
  ignore_errors: yes

- name: Stop PostgreSQL
  shell: "{{ postgresql_bin_dir }}/pg_ctl -D {{ galaxy_db_dir }} stop -m fast"
  become: yes
  become_user: postgres
  ignore_errors: yes

- name: Delete Galaxy log files
  shell: rm -f {{ galaxy_server_dir }}/*.log*
  ignore_errors: true

- name: Clean up Conda tarballs to reduce archive size
  shell: "{{ galaxyFS_base_dir }}/tools/_conda/bin/conda clean --tarballs --yes"
  become: yes
  become_user: "{{ galaxy_user_name }}"
  ignore_errors: yes

- name: Clear out Galaxy's tmp folder
  shell: rm -rf {{ galaxyFS_base_dir }}/tmp/*
  ignore_errors: true

- name: GVL Galaxy - Create galaxy archive target directory
  file: dest="{{ gvl_fs_archive_path }}" owner={{ galaxy_user_name }} group={{ galaxy_user_name }} state=directory
  become: yes
  become_user: root

- name: GVL Galaxy - Remove existing archive
  file: dest="{{ gvl_fs_archive_path }}/{{ gvl_fs_archive_name }}" state=absent
  become: yes
  become_user: root

- name: GVL Galaxy - Create new filesystem archive
  command: chdir="{{ galaxyFS_base_dir }}" tar -czf {{ gvl_fs_archive_path }}/{{ gvl_fs_archive_name }} -C {{ galaxyFS_base_dir }} .
  sudo: yes
  sudo_user: root

- name: GVL Galaxy - Install openstack swift packages
  pip: name={{ item }} virtualenv="{{ gvl_fs_archive_path }}/venv"
  with_items:
    - python-swiftclient
    - python-keystoneclient
  when: gvl_swift_upload

- name: GVL Galaxy - Upload filesystem archive to Swift
  command: chdir="{{ gvl_fs_archive_path }}" {{ gvl_fs_archive_path }}/venv/bin/swift upload {{ cloudman_bucket_name }} {{ gvl_fs_archive_name }}
  sudo: yes
  sudo_user: root
  environment:
     OS_AUTH_URL: "{{ OS_AUTH_URL }}"
     OS_TENANT_ID: "{{ OS_TENANT_ID }}"
     OS_TENANT_NAME: "{{ OS_TENANT_NAME }}"
     OS_USERNAME: "{{ OS_USERNAME }}"
     OS_PASSWORD: "{{ OS_PASSWORD }}"
  when: gvl_swift_upload

- name: GVL Galaxy - Install s3cmd library
  pip: name=s3cmd
  become_user: root
  when: gvl_s3_upload

- name: GVL Galaxy - Upload filesystem archive to s3
  command: s3cmd --access_key={{ AWS_ACCESS_KEY }} --secret_key={{ AWS_SECRET_KEY }} --reduced-redundancy --acl-public put {{ gvl_fs_archive_path }}/{{ gvl_fs_archive_name }} s3://{{ cloudman_bucket_name }}/
  when: gvl_s3_upload

- name: Get the archive MD5 sum
  shell: "md5sum {{ gvl_fs_archive_path }}/{{ gvl_fs_archive_name }} | cut -f 1 -d' '"
  register: md5
  ignore_errors: true

# Display MD5 sum for the created archive
- debug: msg="{{ md5.stdout }}"
  ignore_errors: true
